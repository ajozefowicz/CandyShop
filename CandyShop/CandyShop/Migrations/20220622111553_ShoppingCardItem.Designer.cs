// <auto-generated />
using System;
using CandyShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CandyShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220622111553_ShoppingCardItem")]
    partial class ShoppingCardItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CandyShop.Models.Candy", b =>
                {
                    b.Property<int>("CandyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CandyId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Candies");

                    b.HasData(
                        new
                        {
                            CandyId = 1,
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis",
                            ImageThumbnailUrl = "https://cdn.pixabay.com/photo/2012/12/11/21/28/variation-69470__340.jpg",
                            ImageUrl = "https://cdn.pixabay.com/photo/2012/12/11/21/28/variation-69470__340.jpg",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "Asorted Hard Candy",
                            Price = 2.22m
                        },
                        new
                        {
                            CandyId = 2,
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis",
                            ImageThumbnailUrl = "https://cdn.pixabay.com/photo/2016/10/09/18/06/candy-corn-1726481_960_720.jpg",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/10/09/18/06/candy-corn-1726481_960_720.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Super Hard Candy",
                            Price = 4.22m
                        },
                        new
                        {
                            CandyId = 3,
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis",
                            ImageThumbnailUrl = "https://cdn.pixabay.com/photo/2014/11/30/10/48/chocolate-551424__340.jpg",
                            ImageUrl = "https://cdn.pixabay.com/photo/2014/11/30/10/48/chocolate-551424__340.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Super Chocolate Candy",
                            Price = 3.33m
                        },
                        new
                        {
                            CandyId = 4,
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis",
                            ImageThumbnailUrl = "https://cdn.pixabay.com/photo/2017/04/12/16/56/chocolates-2224998__340.jpg",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/04/12/16/56/chocolates-2224998__340.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Dark Chocolate Candy",
                            Price = 5.55m
                        },
                        new
                        {
                            CandyId = 5,
                            CategoryId = 3,
                            Description = "Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis",
                            ImageThumbnailUrl = "https://cdn.pixabay.com/photo/2018/06/19/23/30/sugar-3485447__340.jpg",
                            ImageUrl = "https://cdn.pixabay.com/photo/2018/06/19/23/30/sugar-3485447__340.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Mango Candy",
                            Price = 5.55m
                        });
                });

            modelBuilder.Entity("CandyShop.Models.Category", b =>
                {
                    b.Property<int>("CateogryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateogryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CateogryId = 1,
                            CategoryDescription = "Super hard candy",
                            CategoryName = "Hard Candy"
                        },
                        new
                        {
                            CateogryId = 2,
                            CategoryDescription = "very chocolate candy",
                            CategoryName = "Chocolate Candy"
                        },
                        new
                        {
                            CateogryId = 3,
                            CategoryDescription = "Sour fruit candy",
                            CategoryName = "Fruit Candy"
                        });
                });

            modelBuilder.Entity("CandyShop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCardItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CandyId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCardId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCardItemId");

                    b.HasIndex("CandyId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("CandyShop.Models.Candy", b =>
                {
                    b.HasOne("CandyShop.Models.Category", "Category")
                        .WithMany("Candies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CandyShop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("CandyShop.Models.Candy", "Candy")
                        .WithMany()
                        .HasForeignKey("CandyId");

                    b.Navigation("Candy");
                });

            modelBuilder.Entity("CandyShop.Models.Category", b =>
                {
                    b.Navigation("Candies");
                });
#pragma warning restore 612, 618
        }
    }
}
